<Window x:Class="ChatRoomWindow.PresentationLayer.LoggedinWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ChatRoomWindow"
        mc:Ignorable="d"
        Title="Super Chat!!!!"
        Background="#2C2F33">
    <local:Grid Margin="5" KeyDown="pressEnter">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Label Grid.Column="1" Grid.Row="0" Content="{Binding Label_Head, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="White" FontFamily="MV Boli" FontWeight="Bold" Grid.ColumnSpan="3" Margin="19,0,74,0"/>

        <ListView x:Name="messagesList" ItemsSource="{Binding Messages}" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" Margin="10,0,0,10" Background="#2C2F33" HorizontalContentAlignment="Stretch">
            <ListView.Resources>
                <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
                <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#1E1B1A" />
                <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
                <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
                <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
                <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
                <SolidColorBrush x:Key="NormalBrush" Color="#888" />
                <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
                <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#1E1B1A" />
                <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />
                <LinearGradientBrush x:Key="ListBoxBackgroundBrush"

            StartPoint="0,0" EndPoint="1,0.001">
                    <GradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="White" Offset="0.0" />
                            <GradientStop Color="White" Offset="0.6" />
                            <GradientStop Color="#DDDDDD" Offset="1.2"/>
                        </GradientStopCollection>
                    </GradientBrush.GradientStops>
                </LinearGradientBrush>
                <LinearGradientBrush x:Key="StandardBrush"

            StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="#FFF" Offset="0.0"/>
                            <GradientStop Color="#CCC" Offset="1.0"/>
                        </GradientStopCollection>
                    </GradientBrush.GradientStops>
                </LinearGradientBrush>
                <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
                <LinearGradientBrush x:Key="PressedBrush"

            StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="#BBB" Offset="0.0"/>
                            <GradientStop Color="#EEE" Offset="0.1"/>
                            <GradientStop Color="#EEE" Offset="0.9"/>
                            <GradientStop Color="#FFF" Offset="1.0"/>
                        </GradientStopCollection>
                    </GradientBrush.GradientStops>
                </LinearGradientBrush>

                <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Focusable" Value="false"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Border
          Name="Border"

          Margin="1"

          CornerRadius="20"

          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="1">
                                    <Path
            HorizontalAlignment="Center"

            VerticalAlignment="Center"

            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Path=Content,

                RelativeSource={RelativeSource TemplatedParent}}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter TargetName="Border" Property="Background"

                                Value="{StaticResource PressedBrush}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground"

                                Value="{StaticResource DisabledForegroundBrush}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Focusable" Value="false"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Border Background="Black" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Focusable" Value="false"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Border
          CornerRadius="5"

          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="0" 
                            Width="8"
                            Margin="8,0,-2,0"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <ControlTemplate x:Key="VerticalScrollBar"

            TargetType="{x:Type ScrollBar}">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="0"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="0"/>
                        </Grid.RowDefinitions>
                        <Border
      Grid.RowSpan="3"

      CornerRadius="2"

      Background="Transparent" />
                        <RepeatButton
      Grid.Row="0"

      Style="{StaticResource ScrollBarLineButton}"
      Height="18"

      Command="ScrollBar.LineUpCommand"

      Content="M 0 4 L 8 4 L 4 0 Z" />
                        <Track
      Name="PART_Track"

      Grid.Row="1"

      IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="1,0,1,0"

          Background="{StaticResource HorizontalNormalBrush}"
          BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                        <RepeatButton
      Grid.Row="3"

      Style="{StaticResource ScrollBarLineButton}"
      Height="18"

      Command="ScrollBar.LineDownCommand"

      Content="M 0 0 L 4 4 L 8 0 Z"/>
                    </Grid>
                </ControlTemplate>
                <ControlTemplate x:Key="HorizontalScrollBar"

            TargetType="{x:Type ScrollBar}">
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MaxWidth="18"/>
                            <ColumnDefinition Width="0.00001*"/>
                            <ColumnDefinition MaxWidth="18"/>
                        </Grid.ColumnDefinitions>
                        <Border
      Grid.ColumnSpan="3"

      CornerRadius="2"

      Background="#F0F0F0" />
                        <RepeatButton
      Grid.Column="0"

      Style="{StaticResource ScrollBarLineButton}"
      Width="18"

      Command="ScrollBar.LineLeftCommand"

      Content="M 4 0 L 4 8 L 0 4 Z" />
                        <Track
      Name="PART_Track"

      Grid.Column="1"

      IsDirectionReversed="False">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="0,1,0,1"

          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                        <RepeatButton
      Grid.Column="3"

      Style="{StaticResource ScrollBarLineButton}"
      Width="18"

      Command="ScrollBar.LineRightCommand"

      Content="M 0 0 L 4 4 L 0 8 Z"/>
                    </Grid>
                </ControlTemplate>
                <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Style.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="Width" Value="Auto"/>
                            <Setter Property="Height" Value="18" />
                            <Setter Property="Template"

                        Value="{StaticResource HorizontalScrollBar}" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Width" Value="18"/>
                            <Setter Property="Height" Value="Auto" />
                            <Setter Property="Template"

                        Value="{StaticResource VerticalScrollBar}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <ScrollContentPresenter Grid.Column="1"/>

                                    <ScrollBar Name="PART_VerticalScrollBar"

            Value="{TemplateBinding VerticalOffset}"
            Maximum="{TemplateBinding ScrollableHeight}"
            ViewportSize="{TemplateBinding ViewportHeight}"
            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                    <ScrollBar Name="PART_HorizontalScrollBar"

            Orientation="Horizontal"

            Grid.Row="1"

            Grid.Column="1"

            Value="{TemplateBinding HorizontalOffset}"
            Maximum="{TemplateBinding ScrollableWidth}"
            ViewportSize="{TemplateBinding ViewportWidth}"
            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

            </ListView.Resources>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <Grid ToolTip= "{Binding guid}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Text="{Binding user.G_id_int}" FontSize="22" Margin="0,5,10,5"  Foreground="LightBlue" FontWeight="Bold"/>
                            <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding user.nickName}" FontSize="16"  Foreground="White" FontWeight="Bold"/>
                            <TextBlock Grid.Column="2" Grid.Row="0" Text="{Binding dateTime}" FontSize="10" Foreground="LightGray" VerticalAlignment="Bottom" Margin="5"/>
                            <TextBlock Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" Text="{Binding messageBody}" FontSize="14" Foreground="White" Margin="0,2,0,4"/>
                            <Button  Grid.Column="3" Grid.Row="0" Grid.ColumnSpan="2" Content="Edit" IsEnabled="{Binding Editable}"  IsEnabledChanged="Button_IsEnabledChanged" ToolTip="{Binding messageBody}" Click="EditMessage"  />
                        </Grid>
                        <Separator  Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2"/>
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <TextBox x:Name="MessageBox1" Grid.Column="1" Grid.Row="2" Text="{Binding Tb_ToSendMessage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="#2C2F33" Foreground="LightGray" PreviewMouseDown="MessageBox1_PreviewMouseDown" Grid.ColumnSpan="2" Margin="19,0,75,0"/>
        <Rectangle Grid.Column="2" Grid.Row="2" PreviewMouseLeftButtonDown="SendButton_Click" Fill="LightGray" Margin="19,0,84,0" Grid.ColumnSpan="2">
            <Rectangle.OpacityMask>
                <VisualBrush Stretch="Uniform">
                    <VisualBrush.Visual>
                        <Path Data="M2,21L23,12L2,3V10L17,12L2,14V21Z" Fill="Black"  />
                    </VisualBrush.Visual>
                </VisualBrush>
            </Rectangle.OpacityMask>
        </Rectangle>
        <StackPanel x:Name="pFilters" Grid.Row="1" Margin="1,5,0,186" >

            <Label x:Name="FiltersL" Content="Filters:"  FontWeight="Bold" Foreground="WhiteSmoke"/>
            <CheckBox x:Name="Nicknamecb" Content="Nickname" IsChecked="{Binding IsChecked_Nickname}" Checked="cbChecked" Unchecked="Cb_Unchecked" Foreground="WhiteSmoke" />
            <TextBox x:Name="NicknameTb" Text="{Binding Tb_Nickname}"  IsEnabled="{Binding IsEnabeld_Nickname}" TextWrapping="Wrap" Foreground="Black"/>
            <CheckBox x:Name="G_idCb" Content="Group ID:" IsChecked="{Binding IsChecked_Gid}" Checked="cbChecked" Unchecked="Cb_Unchecked" Foreground="WhiteSmoke"/>
            <TextBox x:Name="G_idTb" Text="{Binding Tb_Gid}"  IsEnabled="{Binding IsEnabeld_Gid}" TextWrapping="Wrap" Foreground="Black"/>
            <Label x:Name="SortL" Content="Sort:" FontWeight="Bold" Foreground="WhiteSmoke"/>
            <RadioButton x:Name="TimeSortRb" Content="Time Stamp" IsChecked="{Binding IsChecked_TimeStamp}" Checked="cbChecked" Unchecked="Cb_Unchecked" Foreground="WhiteSmoke"/>
            <RadioButton x:Name="NameSortRb" Content="Nickname" IsChecked="{Binding IsChecked_NicknameSort}"  Checked="cbChecked" Unchecked="Cb_Unchecked" Foreground="WhiteSmoke"/>
            <RadioButton x:Name="TripleSortRb" Content="TripleSort" IsChecked="{Binding IsChecked_TripleSort}" ToolTip="sort by g_id nickname and timestamp(in that order)" Checked="cbChecked" Unchecked="Cb_Unchecked" Foreground="WhiteSmoke"/>
            <CheckBox x:Name="Reverseb" Content="Reverse?" IsChecked="{Binding IsChecked_Reverse}"  Checked="cbChecked" Unchecked="Cb_Unchecked" Foreground="WhiteSmoke"/>
            <Button x:Name="bApply" Content="Go!" Click="ApplyClick"/>

            <Rectangle PreviewMouseLeftButtonDown="Open_Music" Fill="LightGray" Width="24" Height="24" Margin="3">
                <Rectangle.OpacityMask>
                    <VisualBrush Stretch="Uniform">
                        <VisualBrush.Visual>
                            <Path Data="M4,6H2V20A2,2 0 0,0 4,22H18V20H4M18,7H15V12.5A2.5,2.5 0 0,1 12.5,15A2.5,2.5 0 0,1 10,12.5A2.5,2.5 0 0,1 12.5,10C13.07,10 13.58,10.19 14,10.5V5H18M20,2H8A2,2 0 0,0 6,4V16A2,2 0 0,0 8,18H20A2,2 0 0,0 22,16V4A2,2 0 0,0 20,2Z" Fill="White"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Rectangle.OpacityMask>
            </Rectangle>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <Rectangle PreviewMouseLeftButtonDown="Music_Play" Fill="LightGray" Width="24" Height="24" Margin="3">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Uniform">
                            <VisualBrush.Visual>
                                <Path Data="M10,16.5V7.5L16,12M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"  Fill="White" />
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Rectangle.OpacityMask>
                </Rectangle>

                <Rectangle PreviewMouseLeftButtonDown="Music_Pause" Fill="LightGray" Width="24" Height="24" Margin="3">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Uniform">
                            <VisualBrush.Visual>
                                <Path Data="M15,16H13V8H15M11,16H9V8H11M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" Fill="White" />
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Rectangle.OpacityMask>
                </Rectangle>

                <Rectangle PreviewMouseLeftButtonDown="Music_Stop" Fill="LightGray" Width="24" Height="24" Margin="3">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Uniform">
                            <VisualBrush.Visual>
                                <Path Data="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M9,9H15V15H9" Fill="White" />
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Rectangle.OpacityMask>
                </Rectangle>

            </StackPanel>
            <Label x:Name="Times" Content="{Binding songTime}" HorizontalAlignment="Center" Margin="5"/>
            <TextBlock x:Name="SongName" Text="{Binding songName}" HorizontalAlignment="Center" Margin="5" TextWrapping="Wrap"/>
        </StackPanel>
        <TextBlock TextWrapping="Wrap" Text="Log Out" FontSize="24" Foreground="#FFCD3939" FontFamily="Showcard Gothic" HorizontalAlignment="Center" VerticalAlignment="Top" PreviewMouseLeftButtonDown="Logout" Margin="10,394,10,0" Width="74" RenderTransformOrigin="0.482,0.678" Height="62" Grid.Row="1">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E06D6B"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </local:Grid>
</Window>
